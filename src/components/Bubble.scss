@import 'common.scss';

.bubble {
    position: absolute;
    padding: 20px 30px;
    background: map-get(map-get($theme, bubble), background);
    border: map-get(map-get($theme, bubble), border);
    border-radius: 8px;
    transform: translate(0, -100%);
    z-index: 50;

    &.is-hidden {
        animation: hide $transition-speed $transition-type forwards;
    }

    &.is-visible {
        animation: show $transition-speed $transition-type forwards;
    }

    @keyframes show {
        0% { opacity: 0; visibility: hidden; }
        1% { visibility: show; }
        100% { opacity: 1; }
    }

    @keyframes hide {
        0% { opacity: 1; visibility: show; }
        99% { opacity: 0; }
        100% { visibility: hidden; }
    }

    > .info,
    > .duration,
    > .time {
        white-space: nowrap;
        margin: 0;
    }

    > .info,
    > .duration {
        display: inline-block;
    }

    > .info {
        font-weight: bold;
    }

    > .duration {
        margin-left: 6px;
    }

    > .time {
        display: block;
    }

    &.bg {

        &--very-low {

            > .info {

                > .value {
                    color: map-get(map-get($theme, bg), very-low);
                }
            }
        }
    
        &--low {

            > .info {

                > .value {
                    color: map-get(map-get($theme, bg), low);
                }
            }
        }
    
        &--normal {
            
            > .info {

                > .value {
                    color: map-get(map-get($theme, bg), normal);
                }
            }
        }
    
        &--high {

            > .info {

                > .value {
                    color: map-get(map-get($theme, bg), high);
                }
            }
        }
    
        &--very-high {

            > .info {

                > .value {
                    color: map-get(map-get($theme, bg), very-high);
                }
            }
        }
    }

    &.netBasal {

        > .info {

            > .value {
                color: map-get(map-get($theme, basal), background);
            }
        }
    }

    &.bolus {

        > .info {

            > .value {
                color: map-get($theme, bolus);
            }
        }
    }
}